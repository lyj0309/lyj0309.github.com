<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - FAKEV</title><link>https://fakev.cn/posts/</link><description>所有文章 | FAKEV</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lyj@fakev.cn (lyj)</managingEditor><webMaster>lyj@fakev.cn (lyj)</webMaster><lastBuildDate>Fri, 11 Feb 2022 17:14:25 +0800</lastBuildDate><atom:link href="https://fakev.cn/posts/" rel="self" type="application/rss+xml"/><item><title>Hugo安装与使用</title><link>https://fakev.cn/posts/hugo%E5%AE%89%E8%A3%85/</link><pubDate>Fri, 11 Feb 2022 17:14:25 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/hugo%E5%AE%89%E8%A3%85/</guid><description>市面上有很多博客的生成框架，hugo, wordpress, hexo 我选择hugo有以下几点 我是gopher hugo生成网站快 配置简单 官方网站https://gohu</description></item><item><title>Hugo免费部署azure</title><link>https://fakev.cn/posts/hugo%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2azure/</link><pubDate>Fri, 11 Feb 2022 16:53:15 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/hugo%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2azure/</guid><description>前言 市面上有许许多多的静态网站部署，vercel,netify,aws,azure,github pages··· 我经过多方考虑，最终选择了a</description></item><item><title>力扣刷题</title><link>https://fakev.cn/posts/go/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%98/</link><pubDate>Thu, 10 Feb 2022 17:47:32 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/go/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%98/</guid><description>//459. 重复的子字符串 func repeatedSubstringPattern(s string) bool { l := len(s) for i := 1; i &amp;lt;= l/2; i++ { if l%i == 0 { subs := s[:i] t := true for k := 0; k &amp;lt; l/i; k++ { if s[k*i:k*i+i] != subs { t = false break } } if t { return true } } } return false } //1447. 最简</description></item><item><title>甲骨文云自动刷arm(使用railway.app)</title><link>https://fakev.cn/posts/cloud/%E7%94%B2%E9%AA%A8%E6%96%87%E4%BA%91%E8%87%AA%E5%8A%A8%E5%88%B7arm/</link><pubDate>Mon, 07 Feb 2022 18:35:01 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/cloud/%E7%94%B2%E9%AA%A8%E6%96%87%E4%BA%91%E8%87%AA%E5%8A%A8%E5%88%B7arm/</guid><description>实际上，刷机子的原理无非过一会儿发一个包看看能开通不，为了便携且贯彻落实白嫖精神，我使用的是railway部署的，一个免费的PaaS平台ht</description></item><item><title>Mysql自动备份</title><link>https://fakev.cn/posts/devops/mysql%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/</link><pubDate>Mon, 07 Feb 2022 17:54:20 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/devops/mysql%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/</guid><description>有时候，ddos或者各种攻击会导致服务瘫痪，或者当前服务器进入流量黑洞，无法访问，或者管理员手欠不小心删了一些数据，这时候，数据库的备份就显</description></item><item><title>docker&amp;compose安装</title><link>https://fakev.cn/posts/devops/docker/</link><pubDate>Mon, 07 Feb 2022 17:52:28 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/devops/docker/</guid><description><![CDATA[docker-compose我认为是单机管理容器的最佳方案，如果要多机 docker安装 curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 换源 cat &gt; /etc/docker/daemon.json &lt;&lt;eof { &#34;registry-mirrors&#34;: [&#34;https://jrromknz.mirror.aliyuncs.com&#34;], &#34;exec-opts&#34;:[&#34;native.cgroupdriver=systemd&#34;] } eof systemctl enable docker.service systemctl daemon-reload systemctl]]></description></item><item><title>Fly.io 免费PaaS平台，以及哪吒面板的部署</title><link>https://fakev.cn/posts/cloud/fly/</link><pubDate>Mon, 07 Feb 2022 15:06:48 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/cloud/fly/</guid><description>fly.io 类似于Okteto、Heroku和Railway的PaaS平台。 只能通过CLI登录，对小白可能有些不太友好。 官网：fly.io 免费额度：F</description></item><item><title>filebeat</title><link>https://fakev.cn/posts/elastic/filebeat/</link><pubDate>Thu, 21 Oct 2021 18:52:55 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/elastic/filebeat/</guid><description>安装 #deb curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-amd64.deb sudo dpkg -i filebeat-7.15.2-amd64.deb #rpm curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm sudo rpm -vi filebeat-7.15.2-x86_64.rpm 设置 路径： /var/filebeat/filebeat.yml output.elasticsearch:hosts:[&amp;#34;myEShost:92</description></item><item><title>go安装</title><link>https://fakev.cn/posts/go/%E5%AE%89%E8%A3%85/</link><pubDate>Thu, 21 Oct 2021 18:52:55 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/go/%E5%AE%89%E8%A3%85/</guid><description><![CDATA[GOVER=1.17.2 wget golang.google.cn/dl/go${GOVER}.linux-amd64.tar.gz tar -xzf go${GOVER}.linux-amd64.tar.gz mv ./go /usr/local/go echo &#34;export PATH=$PATH:/usr/local/go/bin&#34; &gt;&gt; /etc/profile source /etc/profile rm golang.google.cn/dl/go${GOVER}.linux-amd64.tar.gz go env -w GOPROXY=https://mirrors.cloud.tencent.com/go/ go env -w GOPROXY=http://mirrors.tencentyun.com/go/ export GOPROXY=http://mirrors.tencentyun.com/go/]]></description></item><item><title>go请求http</title><link>https://fakev.cn/posts/go/%E8%AF%B7%E6%B1%82-http/</link><pubDate>Thu, 21 Oct 2021 18:52:55 +0800</pubDate><author>作者</author><guid>https://fakev.cn/posts/go/%E8%AF%B7%E6%B1%82-http/</guid><description><![CDATA[go提供了一个http包，可以通过这个包方便的进行http请求 import ( &#34;fmt&#34; &#34;io/ioutil&#34; &#34;net/http&#34; &#34;strings&#34; ) // http.Get func httpGet() { resp, err := http.Get(&#34;http://www.baidu.com&#34;) if err != nil { fmt.Println(err) return } defer resp.Body.Close() body, err := ioutil.ReadAll(resp.Body) fmt.Println(string(body)) } func httpPost() { resp, err := http.Post(&#34;http://www.baidu.com&#34;,]]></description></item></channel></rss>