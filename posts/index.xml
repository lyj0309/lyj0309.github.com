<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - FAKEV</title><link>https://fakev.cn/posts/</link><description>所有文章 | FAKEV</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lyj@fakev.cn (lyj)</managingEditor><webMaster>lyj@fakev.cn (lyj)</webMaster><lastBuildDate>Tue, 28 Jun 2022 11:48:10 +0800</lastBuildDate><atom:link href="https://fakev.cn/posts/" rel="self" type="application/rss+xml"/><item><title>vs快捷键修改</title><link>https://fakev.cn/posts/dotnet/vs%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BF%AE%E6%94%B9/</link><pubDate>Tue, 28 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/vs%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BF%AE%E6%94%B9/</guid><description>代码注释 单行注释 Ctrl+K 然后Ctrl+C 注释 或者Ctrl+K+C ctrl+w选中代码块 shift+alt+= 代码格式化 ctrl+k+d</description></item><item><title>.net之httpClient</title><link>https://fakev.cn/posts/dotnet/dotnet%E4%B9%8Bhttpclient/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/dotnet%E4%B9%8Bhttpclient/</guid><description></description></item><item><title>.net文件io</title><link>https://fakev.cn/posts/dotnet/dotnet%E6%96%87%E4%BB%B6io/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/dotnet%E6%96%87%E4%BB%B6io/</guid><description>https://docs.microsoft.com/zh-cn/dotnet/standard/io/</description></item><item><title>C#json</title><link>https://fakev.cn/posts/dotnet/csharpjson/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharpjson/</guid><description>https://docs.microsoft.com/zh-cn/dotnet/standard/serialization/system-text-json-overview?pivots=dotnet-6-0</description></item><item><title>c#事件</title><link>https://fakev.cn/posts/dotnet/csharp%E4%BA%8B%E4%BB%B6/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharp%E4%BA%8B%E4%BB%B6/</guid><description>Demo 事件声明完整格式 顾客-customer进入餐馆点菜（触发事件），服务员-waiter（收到事件并处理） namespace Exception { class Program { static void Main(string[] args) { Customer customer = new(); Waiter waiter =</description></item><item><title>C#入门</title><link>https://fakev.cn/posts/dotnet/csharp%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharp%E5%85%A5%E9%97%A8/</guid><description><![CDATA[c#入门 打印 int a = 1 Console.WriteLine($&#34;a is {a}&#34;) 分支和循环 if int a = 5; int b = 3; if (a + b &gt; 10) { Console.WriteLine(&#34;The answer is greater than 10&#34;); } else { Console.WriteLine(&#34;The answer is not greater than 10&#34;); } for for (int index = 0; index &lt; 10; index++) { Console.WriteLine($&#34;Hello World! The index is {index}&#34;); } var]]></description></item><item><title>C#多线程</title><link>https://fakev.cn/posts/dotnet/csharp%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharp%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid><description>一、引言 最近在设计模式的一些内容，主要的参考书籍是《Head First 设计模式》，同时在学习过程中也查看了很多博客园中关于设计模式的一些文章的，在这</description></item><item><title>c#字段和属性</title><link>https://fakev.cn/posts/dotnet/csharp%E5%AD%97%E6%AE%B5%E5%92%8C%E5%B1%9E%E6%80%A7/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharp%E5%AD%97%E6%AE%B5%E5%92%8C%E5%B1%9E%E6%80%A7/</guid><description>一、浅谈访问修饰符 作用： 设定访问权限，限制类中的成员（属性、方法等）可访问的范围，访问范围通常有，类的内部、类的外部。 最常用的类型： priv</description></item><item><title>C#字符串</title><link>https://fakev.cn/posts/dotnet/csharp%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharp%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>https://docs.microsoft.com/zh-cn/dotnet/csharp/how-to/parse-strings-using-split https://docs.microsoft.com/zh-cn/dotnet/standard/base-types/basic-string-operations</description></item><item><title>win域管理</title><link>https://fakev.cn/posts/dotnet/win%E5%9F%9F%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 24 Jun 2022 09:26:43 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/win%E5%9F%9F%E7%AE%A1%E7%90%86/</guid><description>win域管理 Domain 域（Domain）：就是由用户和计算机组成的一个逻辑组。在一个域中，由域控制器统一的管理帐户数据库,管理所有的用户登录,资源访</description></item></channel></rss>