<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - FAKEV</title><link>https://fakev.cn/posts/</link><description>所有文章 | FAKEV</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lyj@fakev.cn (lyj)</managingEditor><webMaster>lyj@fakev.cn (lyj)</webMaster><lastBuildDate>Thu, 23 Feb 2023 11:48:10 +0800</lastBuildDate><atom:link href="https://fakev.cn/posts/" rel="self" type="application/rss+xml"/><item><title>c# 切片</title><link>https://fakev.cn/posts/dotnet/c#%E5%88%87%E7%89%87/</link><pubDate>Thu, 23 Feb 2023 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/c#%E5%88%87%E7%89%87/</guid><description><![CDATA[提取 arr 前3个元素 如果用 linq 的话，可以用 Take(3)，用切片操作的话就是 [0..3]， 代码如下： static void Main(string[] args) { var myarr = new string[] { &#34;10&#34;, &#34;20&#34;, &#34;30&#34;, &#34;40&#34;, &#34;50&#34;, &#34;60&#34;, &#34;70&#34;, &#34;80&#34;, &#34;90&#34;, &#34;100&#34; }; //1.]]></description></item><item><title>windows下vpn只用内网路由</title><link>https://fakev.cn/posts/network/windows%E4%B8%8Bvpn%E5%8F%AA%E7%94%A8%E5%86%85%E7%BD%91%E8%B7%AF%E7%94%B1/</link><pubDate>Mon, 26 Dec 2022 14:27:21 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/network/windows%E4%B8%8Bvpn%E5%8F%AA%E7%94%A8%E5%86%85%E7%BD%91%E8%B7%AF%E7%94%B1/</guid><description>windows下vpn只用内网路由 最近🐏了居家办公，需要连接公司的网络，所以使用公司的vpn 但是有个问题，默认所有的流量都会走公司的vpn,</description></item><item><title>linux下使用anaconda部署stable-diffusion</title><link>https://fakev.cn/posts/ai/linux%E4%B8%8B%E4%BD%BF%E7%94%A8anaconda%E9%83%A8%E7%BD%B2stable-diffusion/</link><pubDate>Mon, 21 Nov 2022 14:01:12 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/ai/linux%E4%B8%8B%E4%BD%BF%E7%94%A8anaconda%E9%83%A8%E7%BD%B2stable-diffusion/</guid><description>安装anaconda wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2022.10-Linux-x86_64.sh chmod +x Anaconda3-2022.10-Linux-x86_64.sh ./Anaconda3-2022.10-Linux-x86_64.sh 配置源 python -m pip install --upgrade pip pip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple vim ~/.condarc channels: - defaults show_channel_urls: true default_channels: - https://mirrors.bfsu.edu.cn/anaconda/pkgs/main - https://mirrors.bfsu.edu.cn/anaconda/pkgs/r - https://mirrors.bfsu.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.bfsu.edu.cn/anaconda/cloud msys2: https://mirrors.bfsu.edu.cn/anaconda/cloud bioconda: https://mirrors.bfsu.edu.cn/anaconda/cloud menpo: https://mirrors.bfsu.edu.cn/anaconda/cloud pytorch: https://mirrors.bfsu.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.bfsu.edu.cn/anaconda/cloud simpleitk: https://mirrors.bfsu.edu.cn/anaconda/cloud accelerate pip install accelerate 测试下 pip install --upgrade diffusers</description></item><item><title>intel 11代n5095安装jellyfin并使用硬解</title><link>https://fakev.cn/posts/nas/intel-11%E4%BB%A3n5095%E5%AE%89%E8%A3%85jellyfin%E5%B9%B6%E4%BD%BF%E7%94%A8%E7%A1%AC%E8%A7%A3/</link><pubDate>Thu, 10 Nov 2022 12:47:15 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/nas/intel-11%E4%BB%A3n5095%E5%AE%89%E8%A3%85jellyfin%E5%B9%B6%E4%BD%BF%E7%94%A8%E7%A1%AC%E8%A7%A3/</guid><description>前言 自己想组一个nas，一番权衡买了n5095的板子，想着这怎么说也能流畅硬解了吧（之前是j1900），然后安装jellyfin的艰难之路（</description></item><item><title>内存条科普以及镁光内存条鉴别</title><link>https://fakev.cn/posts/hardware/%E9%95%81%E5%85%89%E5%86%85%E5%AD%98%E6%9D%A1%E9%89%B4%E7%9C%9F%E9%98%B2%E4%BC%AA/</link><pubDate>Thu, 03 Nov 2022 14:01:12 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/hardware/%E9%95%81%E5%85%89%E5%86%85%E5%AD%98%E6%9D%A1%E9%89%B4%E7%9C%9F%E9%98%B2%E4%BC%AA/</guid><description>前言 由于要组装机子，于是在咸鱼上买了个镁光的内存条，本来想着应该是正版，结果插上去一看不对劲了 内存序列号都一样 二位扫码出来的结果不正确 编号对</description></item><item><title>自建nas之n5095一步到位</title><link>https://fakev.cn/posts/hardware/%E8%87%AA%E5%BB%BAnas%E4%B9%8Bn5095%E4%B8%80%E6%AD%A5%E5%88%B0%E4%BD%8D/</link><pubDate>Tue, 01 Nov 2022 13:23:55 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/hardware/%E8%87%AA%E5%BB%BAnas%E4%B9%8Bn5095%E4%B8%80%E6%AD%A5%E5%88%B0%E4%BD%8D/</guid><description>使用n5095搭建ALL IN ONE nas 前言 之前在大学校园，由于校园网和网速和声音等一系列原因，一直没有想搭建一个nas。最近开始实习，有自己的房子，</description></item><item><title>linux (debian) 在命令行安装GUI桌面</title><link>https://fakev.cn/posts/linux/%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%89%E8%A3%85gui%E6%A1%8C%E9%9D%A2/</link><pubDate>Tue, 01 Nov 2022 12:47:15 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/linux/%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%89%E8%A3%85gui%E6%A1%8C%E9%9D%A2/</guid><description>Debian提供了一个命令行工具（tasksel）来简化桌面环境的安装，只需运行如下命令即可： $ sudo tasksel 然后，你可以从列表中选择所需的桌面环境，</description></item><item><title>pve安装和使用</title><link>https://fakev.cn/posts/pve%E5%AE%89%E8%A3%85/</link><pubDate>Fri, 21 Oct 2022 12:47:15 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/pve%E5%AE%89%E8%A3%85/</guid><description>基础安装 2.1 修改 apt 软件源 编辑source.list文件 nano /etc/apt/sources.list 1 粘贴以下内容 deb http://mirrors.ustc.edu.cn/debian/ bullseye main non-free contrib deb http://mirrors.ustc.edu.cn/debian/ bullseye-updates main non-free contrib deb http://mirrors.ustc.edu.cn/debian/ bullseye-backports main non-free contrib deb http://mirrors.ustc.edu.cn/debian-security/ stable-security main non-free contrib deb-src http://mirrors.ustc.edu.cn/debian/ bullseye main non-free contrib deb-src http://mirrors.ustc.edu.cn/debian/ bullseye-updates main non-free</description></item><item><title>linux磁盘硬盘</title><link>https://fakev.cn/posts/linux/usb3/</link><pubDate>Sun, 16 Oct 2022 20:44:06 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/linux/usb3/</guid><description>检测是否支持usb3 由于USB3.0传输文件的速度快于USB2.0，所以现在很多电脑都配置了USB3.0接口，那么要怎么分辨自己的电脑是否有</description></item><item><title>C#委托</title><link>https://fakev.cn/posts/dotnet/csharp%E5%A7%94%E6%89%98/</link><pubDate>Thu, 18 Aug 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharp%E5%A7%94%E6%89%98/</guid><description><![CDATA[C#委托 简介 委托在很多语言都有实现，比如c,c++叫函数指针 声明委托 //无返回值 delegate void MyDele(int a,int b); //有返回值 delegate int MyDele(int a,int b); //泛型委托 delegate T MyDele&lt;T&gt;(T a,T b); delegate T MyDele&lt;T&gt;(T]]></description></item></channel></rss>