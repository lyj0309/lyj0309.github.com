<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>FAKEV</title><link>https://fakev.cn/</link><description>技术博客分享站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lyj@fakev.cn (lyj)</managingEditor><webMaster>lyj@fakev.cn (lyj)</webMaster><lastBuildDate>Sun, 16 Oct 2022 20:44:06 +0800</lastBuildDate><atom:link href="https://fakev.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>linux磁盘硬盘</title><link>https://fakev.cn/posts/linux/usb3/</link><pubDate>Sun, 16 Oct 2022 20:44:06 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/linux/usb3/</guid><description>检测是否支持usb3 由于USB3.0传输文件的速度快于USB2.0，所以现在很多电脑都配置了USB3.0接口，那么要怎么分辨自己的电脑是否有</description></item><item><title>C#委托</title><link>https://fakev.cn/posts/dotnet/csharp%E5%A7%94%E6%89%98/</link><pubDate>Thu, 18 Aug 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharp%E5%A7%94%E6%89%98/</guid><description><![CDATA[C#委托 简介 委托在很多语言都有实现，比如c,c++叫函数指针 声明委托 //无返回值 delegate void MyDele(int a,int b); //有返回值 delegate int MyDele(int a,int b); //泛型委托 delegate T MyDele&lt;T&gt;(T a,T b); delegate T MyDele&lt;T&gt;(T]]></description></item><item><title>ASP NET CORE jwt认证</title><link>https://fakev.cn/posts/dotnet/aspnetcore_jwt/</link><pubDate>Fri, 22 Jul 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/aspnetcore_jwt/</guid><description>区分鉴权（Authentication）和授权（Authorization） 鉴权（Authentication） 简单来说，鉴权就是判断是不是</description></item><item><title>charp之依赖注入（DI）</title><link>https://fakev.cn/posts/dotnet/charp%E4%B9%8B%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5di/</link><pubDate>Fri, 08 Jul 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/charp%E4%B9%8B%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5di/</guid><description></description></item><item><title>vs快捷键修改</title><link>https://fakev.cn/posts/dotnet/vs%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BF%AE%E6%94%B9/</link><pubDate>Tue, 28 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/vs%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BF%AE%E6%94%B9/</guid><description>代码注释 注释选定内容 单行注释 Ctrl+K 然后Ctrl+C 注释 或者Ctrl+K+C ctrl+w选中代码块 编辑.展开选定内容 选择当前字 去掉 shift+alt+= 代码格式化 编辑</description></item><item><title>.net之httpClient</title><link>https://fakev.cn/posts/dotnet/dotnet%E4%B9%8Bhttpclient/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/dotnet%E4%B9%8Bhttpclient/</guid><description></description></item><item><title>.net文件io</title><link>https://fakev.cn/posts/dotnet/dotnet%E6%96%87%E4%BB%B6io/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/dotnet%E6%96%87%E4%BB%B6io/</guid><description>https://docs.microsoft.com/zh-cn/dotnet/standard/io/</description></item><item><title>ASP NET CORE Auth</title><link>https://fakev.cn/posts/dotnet/aspnetcore_auth/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/aspnetcore_auth/</guid><description>前言 首先我们来看一下在ASP.NET时代，Authentication是如何使用的。下面介绍的是System.Web.Security.Fo</description></item><item><title>C#json</title><link>https://fakev.cn/posts/dotnet/csharpjson/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharpjson/</guid><description>https://docs.microsoft.com/zh-cn/dotnet/standard/serialization/system-text-json-overview?pivots=dotnet-6-0</description></item><item><title>c#事件</title><link>https://fakev.cn/posts/dotnet/csharp%E4%BA%8B%E4%BB%B6/</link><pubDate>Fri, 24 Jun 2022 11:48:10 +0800</pubDate><author>lyj</author><guid>https://fakev.cn/posts/dotnet/csharp%E4%BA%8B%E4%BB%B6/</guid><description>Demo 事件声明完整格式 顾客-customer进入餐馆点菜（触发事件），服务员-waiter（收到事件并处理） namespace Exception { class Program { static void Main(string[] args) { Customer customer = new(); Waiter waiter =</description></item></channel></rss>